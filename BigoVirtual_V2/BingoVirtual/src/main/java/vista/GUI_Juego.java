/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import modelo.CartonBingo;

import modelo.ValidarGanador;

import java.util.*;
/**
 *
 * @author edurg
 */
public class GUI_Juego extends javax.swing.JFrame {
  
  public static String modoJuego;
  
  public static int cantidadJugadores;
  
  public static int premio;
  
  public static ArrayList<CartonBingo> cartones = new ArrayList<CartonBingo>();
  
  public static List<Integer> numerosJugados;
  
  public List<CartonBingo> ganadores;
  /**
   * Creates new form GUI_Juego
   */
  public GUI_Juego() {
   ;
    numerosJugados = new ArrayList<Integer>();
    ganadores  = new ArrayList<CartonBingo>();
    
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel1 = new javax.swing.JLabel();
    jButton1 = new javax.swing.JButton();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    jLabel5 = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    jTextArea1 = new javax.swing.JTextArea();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jLabel1.setText("Juego");

    jButton1.setText("Cantar numero");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });

    jLabel2.setText("Tipo de Juego:");

    jLabel3.setText("Premio");

    jLabel4.setText("jLabel4");

    jLabel5.setText("Cantidad de jugadores:");

    jTextArea1.setColumns(20);
    jTextArea1.setRows(5);
    jScrollPane1.setViewportView(jTextArea1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jButton1)
        .addGap(90, 90, 90))
      .addGroup(layout.createSequentialGroup()
        .addGap(15, 15, 15)
        .addComponent(jLabel4)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jLabel5)
        .addGap(92, 92, 92))
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel2)
            .addGap(269, 269, 269)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(195, 195, 195)
            .addComponent(jLabel3))
          .addGroup(layout.createSequentialGroup()
            .addGap(82, 82, 82)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap(154, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel2)
          .addComponent(jLabel3))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jButton1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(87, 87, 87)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel4)
          .addComponent(jLabel5))
        .addGap(14, 14, 14))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    // TODO add your handling code here:
    juegoGeneral();
    
  }//GEN-LAST:event_jButton1ActionPerformed
  
  
  //===========Logica del juego=======================================================
  
  public static void setCartones(ArrayList<CartonBingo> pCarton) {
    GUI_Juego.cartones = pCarton;
  }

  public static void setModoJuego(String modoJuego) {
    GUI_Juego.modoJuego = modoJuego;
  }

  public static void setPremio(int premio) {
    GUI_Juego.premio = premio;
  }

  public static void setNumerosJugados(List<Integer> numerosJugados) {
    GUI_Juego.numerosJugados = numerosJugados;
  }
  
  
  public int cantarNumero() {
    Random random = new Random();
    int numero = 0;
    do {
      numero = 0;
      numero = random.nextInt(75 - 1 + 1) + 1;
    } while (numerosJugados.contains(numero) == true);
    numerosJugados.add(numero);
    return numero;
  } 
  
  public void juegoGeneral(){
    cantarNumero();
    

    ValidarGanador validador = new ValidarGanador();

    List<CartonBingo> ganadores = new ArrayList<CartonBingo>();
    boolean estado = false;
    String mode = "4";
    //cantarNumero();
    switch (mode) {
      case "X":

        //do {
          //numeros.add(cantarNumero());  
        int num1 = cantarNumero();
        jTextArea1.append(String.valueOf(num1));
        validador.verificarEnX(cartones, numerosJugados);
        ganadores = validador.ganadores;

        if (ganadores.size() != 0) {
            estado = true;
                    
          for (CartonBingo unCarton : ganadores) {

            System.out.println(unCarton.toString());
          }
        }
            
        //} while (estado != true);
        

       // System.out.println("Hay un ganador:");
        
        //for (Carton uCarton : ganadores) {
            
          //  System.out.println(uCarton.toString());
        //}
                
        break;
        

      case "Z":
        //do {
          //numeros.add(cantarNumero());  
        int num2 = cantarNumero();
        jTextArea1.append(String.valueOf(num2));
        validador.verificarEnZ(cartones, numerosJugados);
        ganadores = validador.ganadores;

        if (ganadores.size() != 0) {
            estado = true;
                    
          for (CartonBingo uCarton : ganadores) {

              System.out.println(uCarton.toString());
          }
        }
            
        //} while (estado != true);
        

        //System.out.println("Hay un ganador:");
        
        //for (Carton uCarton : ganadores) {
            
          //  System.out.println(uCarton.toString());
        //}
    
        
            break;
      
      case "4":
    
        //do {
          //numeros.add(cantarNumero());
          int num3 = cantarNumero();
          jTextArea1.append(String.valueOf(num3));
          validador.verificarCuatroEzquinas(cartones, numerosJugados);
          ganadores = validador.ganadores;

          if (ganadores.size() != 0) {
            estado = true;
            System.out.println("Hay ganadores");
            for (CartonBingo uCarton : ganadores) {

                System.out.println(uCarton.toString());
            }
          }

         // } while (estado != true);

            //System.out.println("Hay un ganador:");

            //for (Carton uCarton : ganadores) {

              //System.out.println(uCarton.toString());
            //}
            
        break;

      case "T":
     
          //do {
            //numeros.add(cantarNumero());
            int num4 = cantarNumero();
            jTextArea1.append(String.valueOf(num4));
            validador.verificarCartonLleno(cartones, numerosJugados);
            ganadores = validador.ganadores;

            if (ganadores.size() != 0) {
              estado = true;
                      
              for (CartonBingo uCarton : ganadores) {

                  System.out.println(uCarton.toString());
              }
            }

          //} while (estado != true);

          //System.out.println("Hay un ganador:");

          //for (Carton uCarton : ganadores) {

            //  System.out.println(uCarton.toString());
          //}
            
        break;
                          
      default:
        break;
    }
    
    if (estado == true) {
    
    }
    
  
  }
  
  //==================================================================
  
  
  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(GUI_Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(GUI_Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(GUI_Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(GUI_Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new GUI_Juego().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton1;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTextArea jTextArea1;
  // End of variables declaration//GEN-END:variables
}
